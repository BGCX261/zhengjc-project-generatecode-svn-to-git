/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.photop.sap.gc;

import cn.com.photop.generatecode.action.GainMoudleData;
import java.awt.Component;
import java.awt.Container;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author jiancheng.zheng
 */
public class FileSaveJFrame extends javax.swing.JFrame {

    private List<String> frameFileNames;
    private Vector<String> jbVector = new Vector<String>();
    private GainMoudleData gainMoudleData;
    /**
     * Creates new form FileSaveJFrame
     */
    public FileSaveJFrame() {
        gainMoudleData = new GainMoudleData();
        this.frameFileNames =  gainMoudleData.getFrameFileNames();
        for (String s : frameFileNames) {
            if( !jbVector.contains(s) ){
                jbVector.add(s);
            }
            
        }
        initComponents();
        this.setLocationRelativeTo(null);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("保存文件");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(jbVector));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("框架名称：");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jButton1)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * 保存文件触发
     *
     * @param evt
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        gainMoudleData.getModleString(  );
        String message = "";
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter txt = new FileNameExtensionFilter("TXT Files (.txt)", "txt");
        jfc.addChoosableFileFilter(txt);
        jfc.setDialogType(JFileChooser.SAVE_DIALOG);
        String defaultName = frameFileNames.get( jComboBox1.getSelectedIndex() );
        String msg = gainMoudleData.getModleString( defaultName );//"Hello World!";
        JTextField text = getTextField(jfc);
        text.setText(defaultName);
//        
        int res = jfc.showSaveDialog(this);
        if (res == JFileChooser.APPROVE_OPTION) {
            String path = jfc.getSelectedFile().getAbsolutePath();
            if (!path.toLowerCase().endsWith(".txt")) {
                path = path + ".txt";
            }
            System.out.println( "path："+path );
            jfc.setSelectedFile(new File(path));
            File file = jfc.getSelectedFile();

            if (file.exists()) {//已存在文件
                //显示一个对话框来实现是否覆盖源文件
                int r = JOptionPane.showConfirmDialog(jfc, file + "文件已经存在,是否覆盖!", "文件存在", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                if (r == JOptionPane.YES_OPTION) {
                    //当点关闭，点“是”，要三次才可以保存，再退出！    
                    //保存功能代码 
                    try {
                        BufferedWriter bw = new BufferedWriter(new FileWriter(file));
                        bw.write(msg);
                        bw.flush();
                        bw.close();
                        System.out.println("File Save Finished!");
                        message = "文件保存成功！";
                        
                    } catch (IOException e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                        message = "文件保存失败！";
                    }
                    
                } else if (res == JOptionPane.NO_OPTION) {
                    //当点关闭，按“否”（即不保存时），还会出现一次对话框，要再按一次“否”才退出                    
//                    System.exit(0);
                } else if (res == JOptionPane.CANCEL_OPTION) {
                    //当有文档时，点关闭时弹出对话框，按“取消”则返回，成功                        return;    
                }
            } else {
                try {
                    BufferedWriter bw = new BufferedWriter(new FileWriter(file));
                    bw.write(msg);
                    bw.flush();
                    bw.close();
                    System.out.println("File Save Finished!");
                    message = "文件保存成功！";
                } catch (IOException e) {
                    e.printStackTrace();
                    message = "文件保存失败！";
                }
            }
            //提示下载是否成功
            javax.swing.JOptionPane.showConfirmDialog((java.awt.Component) null,
                message, "提示", javax.swing.JOptionPane.DEFAULT_OPTION);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileSaveJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileSaveJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileSaveJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileSaveJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FileSaveJFrame().setVisible(true);
            }
        });
    }
    
    public JTextField getTextField(Container c) {
        JTextField textField = null;
        for (int i = 0; i < c.getComponentCount(); i++) {
            Component cnt = c.getComponent(i);
            if (cnt instanceof JTextField) {
                return (JTextField) cnt;
            }
            if (cnt instanceof Container) {
                textField = getTextField((Container) cnt);
                if (textField != null) {
                    return textField;
                }
            }
        }
        return textField;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
